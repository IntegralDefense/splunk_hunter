[rule]
;
; this is a template rule you can use to create new hunts/rules
;
; set this to no to disable running this search
enabled = no
; the name of the rule (must be unique)
name = The Name Of Your New Rule
; brief description of the rule
description = A single line of text to describe what you are looking for here.
; the "type" of alert - a general categorization of the alert, defaults to splunk if not specified
type = splunk
; how often the search will run in HH:MM:SS format
frequency = 01:00:00
; specify an exact time you want this to run
; this can be useful for running daily reports
; COMMENT THIS OUT to disable this feature
;run_time = 23:00:00
; splunk timespec to use (also see full_coverage)
; NOTE that this still has to be set even if you use full_coverage
; it will be used the first time the search is executed, or whenever the search cache is cleared
earliest = -60m
latest = now
; set to yes to use _index_earliest and _index_latest instead
use_index_time = yes
; the path to the file with the splunk search to execute
search = rules/template.search
; the field to group the results by
; (you may remove this setting to force each event to become an alert by itself)
group_by = src_ip
; the maximum number of events to be returned from splunk by the search
max_result_count = 1000
; when the search is executed, set the time spec to cover all the time between now and the last time the search ran
; this overrides anything you put into the earliest and latest settings
full_coverage = yes
; comma separated list of tags to include with the alert
tags = 

; maps the fields returned by the search to their observable types
[observable_mapping]
src_ip = ipv4
dst_ip = ipv4
ipv4_conversation = ipv4_conversation

; indicate which fields have associated time values
; fields without assignments default to "no"
[temporal_fields]
src_ip = yes
dst_ip = yes
ipv4_conversation = yes

; add the given comma separated list of directives to the given observable-mapped field
; for example, to collect a file given a file_location mapped field
; jar_location = collect_file
; see lib/saq/constants.py for a list of available directives
[directives]
